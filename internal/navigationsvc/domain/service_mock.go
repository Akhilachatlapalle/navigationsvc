// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package domain

import (
	"context"
	"sync"
)

// Ensure, that NavigationServiceMock does implement NavigationService.
// If this is not the case, regenerate this file with moq.
var _ NavigationService = &NavigationServiceMock{}

// NavigationServiceMock is a mock implementation of NavigationService.
//
//	func TestSomethingThatUsesNavigationService(t *testing.T) {
//
//		// make and configure a mocked NavigationService
//		mockedNavigationService := &NavigationServiceMock{
//			GetLocationFunc: func(ctx context.Context, request GetLocationRequest) float64 {
//				panic("mock out the GetLocation method")
//			},
//		}
//
//		// use mockedNavigationService in code that requires NavigationService
//		// and then make assertions.
//
//	}
type NavigationServiceMock struct {
	// GetLocationFunc mocks the GetLocation method.
	GetLocationFunc func(ctx context.Context, request GetLocationRequest) float64

	// calls tracks calls to the methods.
	calls struct {
		// GetLocation holds details about calls to the GetLocation method.
		GetLocation []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Request is the request argument value.
			Request GetLocationRequest
		}
	}
	lockGetLocation sync.RWMutex
}

// GetLocation calls GetLocationFunc.
func (mock *NavigationServiceMock) GetLocation(ctx context.Context, request GetLocationRequest) float64 {
	if mock.GetLocationFunc == nil {
		panic("NavigationServiceMock.GetLocationFunc: method is nil but NavigationService.GetLocation was just called")
	}
	callInfo := struct {
		Ctx     context.Context
		Request GetLocationRequest
	}{
		Ctx:     ctx,
		Request: request,
	}
	mock.lockGetLocation.Lock()
	mock.calls.GetLocation = append(mock.calls.GetLocation, callInfo)
	mock.lockGetLocation.Unlock()
	return mock.GetLocationFunc(ctx, request)
}

// GetLocationCalls gets all the calls that were made to GetLocation.
// Check the length with:
//
//	len(mockedNavigationService.GetLocationCalls())
func (mock *NavigationServiceMock) GetLocationCalls() []struct {
	Ctx     context.Context
	Request GetLocationRequest
} {
	var calls []struct {
		Ctx     context.Context
		Request GetLocationRequest
	}
	mock.lockGetLocation.RLock()
	calls = mock.calls.GetLocation
	mock.lockGetLocation.RUnlock()
	return calls
}
